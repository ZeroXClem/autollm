name: CI/CD Workflow
on:
  push:
    branches: [master, develop]
    paths:
      - src/**
      - tests/**

  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '**.ipynb'

jobs:
  build:
    runs-on: macOS-latest
    strategy:
      matrix:
        operating-system: [macos-latest]
        python-version: 3.9
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore Ubuntu cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'ubuntu-latest'
        with:
          path: ~/.cache/pip
          key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

      - name: Restore MacOS cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'macos-latest'
        with:
          path: ~/Library/Caches/pip
          key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

      - name: Restore Windows cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'windows-latest'
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install local package with dev and readers dependencies
        run: >
          pip install -e .[dev,readers]

      - name: Check styling with pre-commit
        run: |
          pre-commit install
          pre-commit run --all-files

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: pytest
